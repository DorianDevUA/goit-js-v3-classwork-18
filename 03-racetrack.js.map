{"version":3,"file":"03-racetrack.js","sources":["../src/js/03-racetrack.js"],"sourcesContent":["import '../css/style.css';\n\nconst horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\nlet raceCounter = 0;\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}\n    –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\n/*\n * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞\n */\n\n/*\n * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤\n */\n\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["horses","raceCounter","refs","onStart","promises","run","updateWinnerField","updateProgressField","determineWinner","waitForAll","horsesP","horse","time","updateResultsTable","message","tr","resolve","getRandomTime","min","max"],"mappings":"mCAEA,MAAMA,EAAS,CACb,cACA,UACA,kBACA,aACA,YACF,EAEA,IAAIC,EAAc,EAClB,MAAMC,EAAO,CACX,SAAU,SAAS,cAAc,gBAAgB,EACjD,YAAa,SAAS,cAAc,YAAY,EAChD,cAAe,SAAS,cAAc,cAAc,EACpD,UAAW,SAAS,cAAc,2BAA2B,CAC/D,EAEAA,EAAK,SAAS,iBAAiB,QAASC,CAAO,EAE/C,SAASA,GAAU,CACjBF,GAAe,EACf,MAAMG,EAAWJ,EAAO,IAAIK,CAAG,EAE/BC,EAAkB,EAAE,EACpBC,EAAoB,0CAA0C,EAC9DC,EAAgBJ,CAAQ,EACxBK,EAAWL,CAAQ,CACrB,CAEA,SAASI,EAAgBE,EAAS,CAChC,QAAQ,KAAKA,CAAO,EAAE,KAAK,CAAC,CAAE,MAAAC,EAAO,KAAAC,KAAW,CAC9CN,EAAkB,cAAcK,CAAK,oBAAoBC,CAAI;AAAA,YACrD,EACRC,EAAmB,CAAE,MAAAF,EAAO,KAAAC,EAAM,YAAAX,CAAW,CAAE,CACnD,CAAG,CACH,CAEA,SAASQ,EAAWC,EAAS,CAC3B,QAAQ,IAAIA,CAAO,EAAE,KAAK,IAAM,CAC9BH,EAAoB,uCAAuC,CAC/D,CAAG,CACH,CAEA,SAASD,EAAkBQ,EAAS,CAClCZ,EAAK,YAAY,YAAcY,CACjC,CAEA,SAASP,EAAoBO,EAAS,CACpCZ,EAAK,cAAc,YAAcY,CACnC,CAEA,SAASD,EAAmB,CAAE,MAAAF,EAAO,KAAAC,EAAM,YAAAX,CAAW,EAAI,CACxD,MAAMc,EAAK,WAAWd,CAAW,YAAYU,CAAK,YAAYC,CAAI,aAClEV,EAAK,UAAU,mBAAmB,YAAaa,CAAE,CACnD,CAUA,SAASV,EAAIM,EAAO,CAClB,OAAO,IAAI,QAAQK,GAAW,CAC5B,MAAMJ,EAAOK,EAAc,IAAM,IAAI,EAErC,WAAW,IAAM,CACfD,EAAQ,CAAE,MAAAL,EAAO,KAAAC,EAAM,CACxB,EAAEA,CAAI,CACX,CAAG,CACH,CAEA,SAASK,EAAcC,EAAKC,EAAK,CAC/B,OAAO,KAAK,MAAM,KAAK,OAAM,GAAMA,EAAMD,EAAM,GAAKA,CAAG,CACzD"}